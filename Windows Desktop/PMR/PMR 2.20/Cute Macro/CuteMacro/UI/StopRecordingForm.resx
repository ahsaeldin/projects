<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButStopRecording.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>